Создать две ХП:

ХП1 выводит: фото, фамилию, имя, почту, дата рождения пациента, дату приема, количество оказанных услуг, общую стоимость по оказанным услугам (в один день может быть оказано несколько услуг).
ХП 2 выводит: по дате приема, для указанного клиента - название  услугу, стоимость услуги, рецепт, диагноз

Пациент (Фамилия, Имя, почта, пароль, дата рождения, фото) Услуга (название, стоимость) Прием (дата приема, услуга, клиент, рецепт, диагноз) 
создать бд

##########################################################################################################################################################################################################
-- Создание базы данных
CREATE DATABASE MedicalClinic;
GO

USE MedicalClinic;
GO

-- Создание таблицы Пациентов
CREATE TABLE Patients (
    PatientID INT  PRIMARY KEY AUTO_INCREMENT,
    LastName VARCHAR(25),
    FirstName VARCHAR(25),
    Email VARCHAR(25),
    Login VARCHAR(25),
    Password VARCHAR(25),
    BirthDate DATE,
    Photo VARBINARY(255) 
);

-- Создание таблицы Услуг
CREATE TABLE Services (
    ServiceID INT  PRIMARY KEY auto_increment,
    ServiceName VARCHAR(25) NOT NULL,
    Price int
);

-- Создание таблицы Приемов
CREATE TABLE Appointments (
    AppointmentID INT PRIMARY KEY auto_increment,
    AppointmentDate DATETIME NOT NULL,
    PatientID INT NOT NULL,
    Diagnosis VARCHAR(25) NULL,
    Prescription VARCHAR(25) NULL,
    FOREIGN KEY (PatientID) REFERENCES Patients(PatientID)
);

-- Создание связующей таблицы для услуг в приемах
CREATE TABLE AppointmentServices (
    AppointmentServiceID INT PRIMARY KEY AUTO_INCREMENT,
    AppointmentID INT,
    ServiceID INT,
    FOREIGN KEY (AppointmentID) REFERENCES Appointments(AppointmentID),
    FOREIGN KEY (ServiceID) REFERENCES Services(ServiceID)
);


-- Заполнение таблицы Patients
INSERT INTO Patients (LastName, FirstName, Email, Login, Password, BirthDate) VALUES
('Иванов', 'Иван', 'ivanov@example.com', '1', '1', '1990-05-15'),
('Петрова', 'Елена', 'petrova@example.com', 'alisher', 'alisher', '1985-10-20'),
('Сидоров', 'Алексей', 'sidorov@example.com', 'ali', 'ali', '1992-03-01');

-- Заполнение таблицы Services
INSERT INTO Services (ServiceName, Price) VALUES
('Консультация терапевта', 1500),
('Анализ крови', 800),
('УЗИ брюшной полости', 2000),
('ЭКГ', 1000);

-- Заполнение таблицы Appointments
INSERT INTO Appointments (AppointmentDate, PatientID, Diagnosis, Prescription) VALUES
('2023-11-15 10:00:00', 1, 'ОРВИ', 'Антибиотики'),
('2023-11-15 11:30:00', 2, 'Гастрит', 'Омепразол'),
('2023-11-16 09:00:00', 3, 'Мигрень', 'Ибупрофен'),
('2023-11-16 14:00:00', 1, 'Повышенное давление', 'Каптоприл');

-- Заполнение таблицы AppointmentServices
INSERT INTO AppointmentServices (AppointmentID, ServiceID) VALUES
(1, 1), -- Прием 1: Консультация терапевта
(1, 2), -- Прием 1: Анализ крови
(2, 1), -- Прием 2: Консультация терапевта
(2, 3), -- Прием 2: УЗИ брюшной полости
(3, 1), -- Прием 3: Консультация терапевта
(3, 4), -- Прием 3: ЭКГ
(4,1), -- Прием 4: Консультация терапевта
(4,2); -- Прием 4: Анализ крови


две ХП 

-- Хранимая процедура 1: Информация о пациенте, приеме, услугах и общей стоимости

DELIMITER //
CREATE PROCEDURE PatientAppointmentSummary(IN patient_id INT)
BEGIN
    SELECT
        p.Photo,
        p.LastName,
        p.FirstName,
        p.Email,
        p.BirthDate,
        a.AppointmentDate,
        COUNT(DISTINCT aps.ServiceID) AS NumberOfServices,  -- Подсчет уникальных услуг
        SUM(s.Price) AS TotalServiceCost
    FROM
        Patients p
    JOIN
        Appointments a ON p.PatientID = a.PatientID
    LEFT JOIN  -- Используем LEFT JOIN, чтобы учесть приемы, где нет оказанных услуг
        AppointmentServices aps ON a.AppointmentID = aps.AppointmentID
    LEFT JOIN
        Services s ON aps.ServiceID = s.ServiceID
    WHERE
        p.PatientID = patient_id  -- Фильтр по ID пациента
    GROUP BY
        p.PatientID, a.AppointmentID   -- Группировка по пациенту и приему для корректного подсчета
    ORDER BY
        a.AppointmentDate;  -- Сортировка по дате приема
END //
DELIMITER ;

-- Хранимая процедура 2: Информация об услугах, рецепте и диагнозе для конкретного пациента и даты приема

DELIMITER //
CREATE PROCEDURE AppointmentDetails(IN patient_id INT, IN appointment_date DATETIME)
BEGIN
    SELECT
        s.ServiceName,
        s.Price,
        a.Prescription,
        a.Diagnosis
    FROM
        Appointments a
    JOIN
        AppointmentServices aps ON a.AppointmentID = aps.AppointmentID
    JOIN
        Services s ON aps.ServiceID = s.ServiceID
    WHERE
        a.PatientID = patient_id AND a.AppointmentDate = appointment_date;
END //
DELIMITER ;

-- Примеры использования

-- ХП1: Для пациента с ID = 1
CALL PatientAppointmentSummary(1);

-- ХП2: Для пациента с ID = 1 и датой приема '2023-11-15 10:00:00'
CALL AppointmentDetails(1, '2023-11-15 10:00:00');

