Создать две ХП:

ХП1 выводит: фото, фамилию, имя, почту, дата рождения пациента, дату приема, количество оказанных услуг, общую стоимость по оказанным услугам (в один день может быть оказано несколько услуг).
ХП 2 выводит: по дате приема, для указанного клиента - название  услугу, стоимость услуги, рецепт, диагноз

CREATE PROCEDURE GetPatientAppointmentDetails
    @PatientID INT
AS
BEGIN
    SELECT 
        p.Photo,
        p.LastName AS 'Фамилия',
        p.FirstName AS 'Имя',
        p.Email AS 'Почта',
        p.BirthDate AS 'Дата рождения',
        a.AppointmentDate AS 'Дата приема',
        COUNT(s.ServiceID) AS 'Количество услуг',
        SUM(s.Price) AS 'Общая стоимость'
    FROM 
        Patients p
    JOIN 
        Appointments a ON p.PatientID = a.PatientID
    LEFT JOIN 
        AppointmentServices asp ON a.AppointmentID = asp.AppointmentID
    LEFT JOIN 
        Services s ON asp.ServiceID = s.ServiceID
    WHERE 
        p.PatientID = @PatientID
    GROUP BY 
        p.Photo,
        p.LastName,
        p.FirstName,
        p.Email,
        p.BirthDate,
        a.AppointmentDate,
        a.AppointmentID
    ORDER BY 
        a.AppointmentDate DESC;
END;

Пациент (Фамилия, Имя, почта, пароль, дата рождения, фото) Услуга (название, стоимость) Прием (дата приема, услуга, клиент, рецепт, диагноз) 
создать бд


-- Создание базы данных
CREATE DATABASE MedicalClinic;
GO

USE MedicalClinic;
GO

-- Создание таблицы Пациентов
CREATE TABLE Patients (
    PatientID INT  PRIMARY KEY AUTO_INCREMENT,
    LastName VARCHAR(25),
    FirstName VARCHAR(25),
    Email VARCHAR(25),
    Password VARCHAR(25),
    BirthDate DATE,
    Photo VARBINARY(255) 
);

-- Создание таблицы Услуг
CREATE TABLE Services (
    ServiceID INT  PRIMARY KEY auto_increment,
    ServiceName VARCHAR(25) NOT NULL,
    Price int
);

-- Создание таблицы Приемов
CREATE TABLE Appointments (
    AppointmentID INT PRIMARY KEY auto_increment,
    AppointmentDate DATETIME NOT NULL,
    PatientID INT NOT NULL,
    Diagnosis VARCHAR(25) NULL,
    Prescription VARCHAR(25) NULL,
    FOREIGN KEY (PatientID) REFERENCES Patients(PatientID)
);

-- Создание связующей таблицы для услуг в приемах
CREATE TABLE AppointmentServices (
    AppointmentServiceID INT PRIMARY KEY AUTO_INCREMENT,
    AppointmentID INT,
    ServiceID INT,
    FOREIGN KEY (AppointmentID) REFERENCES Appointments(AppointmentID),
    FOREIGN KEY (ServiceID) REFERENCES Services(ServiceID)
);


-- Заполнение таблицы Patients
INSERT INTO Patients (LastName, FirstName, Email, Password, BirthDate) VALUES
('Иванов', 'Иван', 'ivanov@example.com', 'password123', '1990-05-15'),
('Петрова', 'Елена', 'petrova@example.com', 'securePass', '1985-10-20'),
('Сидоров', 'Алексей', 'sidorov@example.com', 'mySecret', '1992-03-01');

-- Заполнение таблицы Services
INSERT INTO Services (ServiceName, Price) VALUES
('Консультация терапевта', 1500),
('Анализ крови', 800),
('УЗИ брюшной полости', 2000),
('ЭКГ', 1000);

-- Заполнение таблицы Appointments
INSERT INTO Appointments (AppointmentDate, PatientID, Diagnosis, Prescription) VALUES
('2023-11-15 10:00:00', 1, 'ОРВИ', 'Антибиотики'),
('2023-11-15 11:30:00', 2, 'Гастрит', 'Омепразол'),
('2023-11-16 09:00:00', 3, 'Мигрень', 'Ибупрофен'),
('2023-11-16 14:00:00', 1, 'Повышенное давление', 'Каптоприл');

-- Заполнение таблицы AppointmentServices
INSERT INTO AppointmentServices (AppointmentID, ServiceID) VALUES
(1, 1), -- Прием 1: Консультация терапевта
(1, 2), -- Прием 1: Анализ крови
(2, 1), -- Прием 2: Консультация терапевта
(2, 3), -- Прием 2: УЗИ брюшной полости
(3, 1), -- Прием 3: Консультация терапевта
(3, 4), -- Прием 3: ЭКГ
(4,1), -- Прием 4: Консультация терапевта
(4,2); -- Прием 4: Анализ крови

